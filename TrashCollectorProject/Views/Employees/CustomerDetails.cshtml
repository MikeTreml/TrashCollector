@model TrashCollectorProject.Models.Customer
@{
    ViewData["Title"] = "Customer Details";
    Layout = "~/Views/Shared/_LayoutMap.cshtml";


}

<h1>Customer Details</h1>

<div>
    <h4>Customer</h4>


    <dl class="row">
        <dt class="col-sm-2">
            Customer Name
        </dt>

        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PickUpDay)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PickUpDay)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.OneTimePickUp)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.OneTimePickUp)
        </dd>
        <dt class="col-sm-2">
            Address:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address.AddressLine1)<br />
            @Html.DisplayFor(model => model.Address.City) @Html.DisplayFor(model => model.Address.State) @Html.DisplayFor(model => model.Address.ZipCode)
        </dd>

        <dt class="col-sm-2">
            Postpane Dates
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.SuspendStart) - @Html.DisplayFor(model => model.SuspendEnd)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AccountBalance)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.AccountBalance)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IdentityUserId)
        </dt>
        <dd class="col-sm-10">
           
        </dd>

    </dl>
    <d2 class="row">

    </d2>

</div>
<div id="map"></div>
<div>

    <a asp-action="Index">Back to List</a>
</div>

<style type="text/css">
    /* Always set the map height explicitly to define the size of the div
            * element that contains the map. */
    #map {
        width: 100%;
        height: 400px;
        background-color: grey;
    }
</style>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script async defer src="@APIKeys.GOOGLE_MAP"></script>
<script>

    function initMap() {
         var adressLocation = "@Html.DisplayFor(model => model.Address.AddressLine1) @Html.DisplayFor(model => model.Address.City) @Html.DisplayFor(model => model.Address.State) @Html.DisplayFor(model => model.Address.ZipCode) ";

      
            axios.get('https://maps.googleapis.com/maps/api/geocode/json', {
            params:{
            address:adressLocation,
                 key:"@APIKeys.GOOGLE_API_KEY"
           }
         })
         .then(function(response){
            const location = { lat: response.data.results[0].geometry.location.lat, lng: response.data.results[0].geometry.location.lng };
            const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 12,
            center: location,
            });
            const marker = new google.maps.Marker({
            position: location,
            map: map,
            });
         })


    }
</script>

