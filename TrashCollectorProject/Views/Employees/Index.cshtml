@model IEnumerable<TrashCollectorProject.Models.JoinCustomerAddress>

@{
    ViewData["Title"] = "View";
    Layout = "~/Views/Shared/_LayoutEmployee.cshtml";

}
<h1>View @ViewData["Day"]</h1>

<table>
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Balance
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerVM.PickUpDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CustomerVM.OneTimePickUp)
            </th>
            <th>
                No Service
            </th>
            
            <th>
                @Html.DisplayNameFor(model => model.AddressVM.ZipCode)
            </th>


            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerVM.FirstName)  @Html.DisplayFor(modelItem => item.CustomerVM.LastName)
                </td>
                
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerVM.AccountBalance)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerVM.PickUpDay)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerVM.OneTimePickUp)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CustomerVM.SuspendStart) -  @Html.DisplayFor(modelItem => item.CustomerVM.SuspendEnd)
                </td>
               
                <td>
                    @Html.DisplayFor(modelItem => item.AddressVM.ZipCode)
                </td>

                <td>

                    <a asp-action="CustomerDetails" asp-route-id="@item.CustomerVM.Id">Details</a> <br />
                    <div @ViewData["Hidden"]>
                        <a asp-action="PickComplete" asp-route-id="@item.CustomerVM.AddressId">Completed</a>
                    </div>
                </td>
            </tr>

        }
    </tbody>
</table>
<div id="map"></div>

<style type="text/css">
    /* Always set the map height explicitly to define the size of the div
            * element that contains the map. */
    #map {
        width: 100%;
        height: 400px;
        background-color: grey;
        padding-top: 15px;
    }
</style>

<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script async defer src="@APIKeys.GOOGLE_MAP"></script>
<script>

    function initMap() {
        var adressLocation = "@ViewBag.zip"
         axios.get('https://maps.googleapis.com/maps/api/geocode/json',{
           params:{
             address:adressLocation,
             key:"@APIKeys.GOOGLE_API_KEY"
           }
         })
         .then(function(response){
          console.log(response);
          var lng = response.data.results[0].geometry.location.lng;
          var lat = response.data.results[0].geometry.location.lat;
            
          const location = { lat: lat, lng: lng };
          const map = new google.maps.Map(document.getElementById("map"), {zoom: 14, center: location,});
          var i;
            @for (var i = 0; i < ViewBag.lat.Count; i++)
            {
                @Html.Raw("addMarker(" + ViewBag.lat[i] + "," + ViewBag.lng[i] + ");");
            }

        function addMarker(x, y) {

            var location = new google.maps.LatLng(x, y);
            var marker = new google.maps.Marker({
                position: location,
                map: map,
            });
        }



         });





    }
</script>